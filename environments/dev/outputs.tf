# VPC Outputs
output "vpc_id" {
  description = "ID of the VPC"
  value       = module.vpc.vpc_id
}

output "vpc_cidr_block" {
  description = "CIDR block of the VPC"
  value       = module.vpc.vpc_cidr_block
}

output "public_subnet_ids" {
  description = "IDs of the public subnets"
  value       = module.vpc.public_subnet_ids
}

output "private_subnet_ids" {
  description = "IDs of the private subnets"
  value       = module.vpc.private_subnet_ids
}

output "nat_gateway_public_ips" {
  description = "Public IPs of NAT Gateways"
  value       = module.vpc.nat_gateway_public_ips
}

# Security Group Outputs
output "cluster_security_group_id" {
  description = "Security group ID for EKS cluster"
  value       = module.security_groups.cluster_security_group_id
}

output "node_security_group_id" {
  description = "Security group ID for EKS nodes"
  value       = module.security_groups.node_security_group_id
}

output "pod_security_group_id" {
  description = "Security group ID for EKS pods"
  value       = module.security_groups.pod_security_group_id
}

output "alb_security_group_id" {
  description = "Security group ID for ALB"
  value       = module.security_groups.alb_security_group_id
}

# IAM Role Outputs
output "cluster_role_arn" {
  description = "ARN of the EKS cluster IAM role"
  value       = module.iam_roles.eks_cluster_role_arn
}

output "node_role_arn" {
  description = "ARN of the EKS node group IAM role"
  value       = module.iam_roles.eks_node_role_arn
}

# EKS Cluster Outputs
output "cluster_id" {
  description = "EKS cluster ID"
  value       = module.eks.cluster_id
}

output "cluster_arn" {
  description = "EKS cluster ARN"
  value       = module.eks.cluster_arn
}

output "cluster_endpoint" {
  description = "EKS cluster endpoint"
  value       = module.eks.cluster_endpoint
  sensitive   = true
}

output "cluster_version" {
  description = "EKS cluster Kubernetes version"
  value       = module.eks.cluster_version
}

output "cluster_certificate_authority_data" {
  description = "Base64 encoded certificate data required to communicate with the cluster"
  value       = module.eks.cluster_certificate_authority_data
  sensitive   = true
}

output "cluster_oidc_issuer_url" {
  description = "The URL on the EKS cluster OIDC Issuer"
  value       = module.eks.cluster_oidc_issuer_url
}

output "node_group_arn" {
  description = "EKS node group ARN"
  value       = module.eks.node_group_arn
}

output "node_group_status" {
  description = "EKS node group status"
  value       = module.eks.node_group_status
}

# Kubectl Configuration
output "kubectl_config" {
  description = "kubectl config as generated by the module"
  value = {
    cluster_name                     = module.eks.cluster_id
    endpoint                        = module.eks.cluster_endpoint
    certificate_authority_data      = module.eks.cluster_certificate_authority_data
    region                         = var.region
  }
  sensitive = true
}

# KMS Outputs
output "kms_key_id" {
  description = "KMS key ID for EKS secrets encryption"
  value       = module.kms.kms_key_id
}

output "kms_key_arn" {
  description = "KMS key ARN for EKS secrets encryption"
  value       = module.kms.kms_key_arn
}

# CloudWatch Outputs
output "cloudwatch_log_group_name" {
  description = "Name of the CloudWatch log group for EKS cluster"
  value       = module.eks.cloudwatch_log_group_name
}

output "cloudwatch_log_group_arn" {
  description = "ARN of the CloudWatch log group for EKS cluster"
  value       = module.eks.cloudwatch_log_group_arn
}

# OIDC Provider Outputs
output "oidc_provider_arn" {
  description = "ARN of the OIDC provider for IRSA"
  value       = module.oidc.oidc_provider_arn
}

output "oidc_provider_url" {
  description = "URL of the OIDC provider"
  value       = module.oidc.oidc_provider_url
}

# Complete Infrastructure Summary
output "infrastructure_summary" {
  description = "Complete infrastructure summary"
  value = {
    vpc = {
      id                = module.vpc.vpc_id
      cidr             = module.vpc.vpc_cidr_block
      public_subnets   = module.vpc.public_subnet_ids
      private_subnets  = module.vpc.private_subnet_ids
      nat_gateways     = module.vpc.nat_gateway_ids
    }
    eks = {
      cluster_id       = module.eks.cluster_id
      cluster_endpoint = module.eks.cluster_endpoint
      cluster_version  = module.eks.cluster_version
      node_group_arn   = module.eks.node_group_arn
      addons          = module.eks.eks_addons
    }
    security = {
      cluster_sg = module.security_groups.cluster_security_group_id
      node_sg    = module.security_groups.node_security_group_id
      pod_sg     = module.security_groups.pod_security_group_id
      alb_sg     = module.security_groups.alb_security_group_id
    }
    iam = {
      cluster_role = module.iam_roles.eks_cluster_role_arn
      node_role    = module.iam_roles.eks_node_role_arn
      ebs_csi_role = module.iam_roles.eks_ebs_csi_role_arn
    }
    encryption = {
      kms_key_id  = module.kms.kms_key_id
      kms_key_arn = module.kms.kms_key_arn
    }
    oidc = {
      provider_arn = module.oidc.oidc_provider_arn
      provider_url = module.oidc.oidc_provider_url
    }
    logging = {
      log_group_name = module.eks.cloudwatch_log_group_name
      log_group_arn  = module.eks.cloudwatch_log_group_arn
    }
  }
  sensitive = true
}

# Connection Information
output "connection_info" {
  description = "Information needed to connect to the cluster"
  value = {
    cluster_name     = var.cluster_name
    region          = var.region
    endpoint        = module.eks.cluster_endpoint
    ca_data         = module.eks.cluster_certificate_authority_data
    oidc_issuer     = module.eks.cluster_oidc_issuer_url
  }
  sensitive = true
}

# Database Outputs
output "database_endpoints" {
  description = "Database connection endpoints"
  value = {
    postgresql = module.rds.postgresql_endpoint
    mysql      = module.rds.mysql_endpoint
    redis      = module.elasticache.redis_endpoint
  }
}

output "dynamodb_tables" {
  description = "DynamoDB table names"
  value       = module.dynamodb.table_names
}

output "secrets_manager" {
  description = "AWS Secrets Manager secret names"
  value       = module.secrets_manager.secret_names
}

# GitHub Actions Output
output "github_actions_role_arn" {
  description = "ARN of the GitHub Actions IAM role"
  value       = module.github_actions.github_actions_role_arn
}